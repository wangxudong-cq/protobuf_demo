// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: graph.proto
// Protobuf C++ Version: 5.29.0-dev

#include "graph.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace graph {

inline constexpr GraphProto::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        graph_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        graph_data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        graph_in_data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        graph_out_data_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        graph_size_{0u},
        graph_in_size_{0u},
        graph_out_size_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR GraphProto::GraphProto(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GraphProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GraphProtoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GraphProtoDefaultTypeInternal() {}
  union {
    GraphProto _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GraphProtoDefaultTypeInternal _GraphProto_default_instance_;

inline constexpr GraphsProto::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : graph_node_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GraphsProto::GraphsProto(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GraphsProtoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GraphsProtoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GraphsProtoDefaultTypeInternal() {}
  union {
    GraphsProto _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GraphsProtoDefaultTypeInternal _GraphsProto_default_instance_;
}  // namespace graph
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_graph_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_graph_2eproto = nullptr;
const ::uint32_t
    TableStruct_graph_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::graph::GraphProto, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::graph::GraphProto, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::graph::GraphProto, _impl_.graph_name_),
        PROTOBUF_FIELD_OFFSET(::graph::GraphProto, _impl_.graph_data_),
        PROTOBUF_FIELD_OFFSET(::graph::GraphProto, _impl_.graph_size_),
        PROTOBUF_FIELD_OFFSET(::graph::GraphProto, _impl_.graph_in_data_),
        PROTOBUF_FIELD_OFFSET(::graph::GraphProto, _impl_.graph_in_size_),
        PROTOBUF_FIELD_OFFSET(::graph::GraphProto, _impl_.graph_out_data_),
        PROTOBUF_FIELD_OFFSET(::graph::GraphProto, _impl_.graph_out_size_),
        0,
        1,
        4,
        2,
        5,
        3,
        6,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::graph::GraphsProto, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::graph::GraphsProto, _impl_.graph_node_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 15, -1, sizeof(::graph::GraphProto)},
        {22, -1, -1, sizeof(::graph::GraphsProto)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::graph::_GraphProto_default_instance_._instance,
    &::graph::_GraphsProto_default_instance_._instance,
};
const char descriptor_table_protodef_graph_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\013graph.proto\022\005graph\"\300\002\n\nGraphProto\022\027\n\ng"
    "raph_name\030\001 \001(\tH\000\210\001\001\022\027\n\ngraph_data\030\002 \001(\014"
    "H\001\210\001\001\022\027\n\ngraph_size\030\003 \001(\rH\002\210\001\001\022\032\n\rgraph_"
    "in_data\030\004 \001(\014H\003\210\001\001\022\032\n\rgraph_in_size\030\005 \001("
    "\rH\004\210\001\001\022\033\n\016graph_out_data\030\006 \001(\014H\005\210\001\001\022\033\n\016g"
    "raph_out_size\030\007 \001(\rH\006\210\001\001B\r\n\013_graph_nameB"
    "\r\n\013_graph_dataB\r\n\013_graph_sizeB\020\n\016_graph_"
    "in_dataB\020\n\016_graph_in_sizeB\021\n\017_graph_out_"
    "dataB\021\n\017_graph_out_size\"4\n\013GraphsProto\022%"
    "\n\ngraph_node\030\002 \003(\0132\021.graph.GraphProtob\006p"
    "roto3"
};
static ::absl::once_flag descriptor_table_graph_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_graph_2eproto = {
    false,
    false,
    405,
    descriptor_table_protodef_graph_2eproto,
    "graph.proto",
    &descriptor_table_graph_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_graph_2eproto::offsets,
    file_level_enum_descriptors_graph_2eproto,
    file_level_service_descriptors_graph_2eproto,
};
namespace graph {
// ===================================================================

class GraphProto::_Internal {
 public:
  using HasBits =
      decltype(std::declval<GraphProto>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(GraphProto, _impl_._has_bits_);
};

GraphProto::GraphProto(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:graph.GraphProto)
}
inline PROTOBUF_NDEBUG_INLINE GraphProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::graph::GraphProto& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        graph_name_(arena, from.graph_name_),
        graph_data_(arena, from.graph_data_),
        graph_in_data_(arena, from.graph_in_data_),
        graph_out_data_(arena, from.graph_out_data_) {}

GraphProto::GraphProto(
    ::google::protobuf::Arena* arena,
    const GraphProto& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GraphProto* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, graph_size_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, graph_size_),
           offsetof(Impl_, graph_out_size_) -
               offsetof(Impl_, graph_size_) +
               sizeof(Impl_::graph_out_size_));

  // @@protoc_insertion_point(copy_constructor:graph.GraphProto)
}
inline PROTOBUF_NDEBUG_INLINE GraphProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        graph_name_(arena),
        graph_data_(arena),
        graph_in_data_(arena),
        graph_out_data_(arena) {}

inline void GraphProto::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, graph_size_),
           0,
           offsetof(Impl_, graph_out_size_) -
               offsetof(Impl_, graph_size_) +
               sizeof(Impl_::graph_out_size_));
}
GraphProto::~GraphProto() {
  // @@protoc_insertion_point(destructor:graph.GraphProto)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GraphProto::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.graph_name_.Destroy();
  _impl_.graph_data_.Destroy();
  _impl_.graph_in_data_.Destroy();
  _impl_.graph_out_data_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    GraphProto::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_GraphProto_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &GraphProto::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<GraphProto>(),
            ::google::protobuf::Message::GetNewImpl<GraphProto>(),
            ::google::protobuf::Message::GetClearImpl<GraphProto>(), &GraphProto::ByteSizeLong,
                &GraphProto::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(GraphProto, _impl_._cached_size_),
            false,
        },
        &GraphProto::kDescriptorMethods,
        &descriptor_table_graph_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* GraphProto::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 35, 2> GraphProto::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(GraphProto, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::graph::GraphProto>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional string graph_name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(GraphProto, _impl_.graph_name_)}},
    // optional bytes graph_data = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(GraphProto, _impl_.graph_data_)}},
    // optional uint32 graph_size = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GraphProto, _impl_.graph_size_), 4>(),
     {24, 4, 0, PROTOBUF_FIELD_OFFSET(GraphProto, _impl_.graph_size_)}},
    // optional bytes graph_in_data = 4;
    {::_pbi::TcParser::FastBS1,
     {34, 2, 0, PROTOBUF_FIELD_OFFSET(GraphProto, _impl_.graph_in_data_)}},
    // optional uint32 graph_in_size = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GraphProto, _impl_.graph_in_size_), 5>(),
     {40, 5, 0, PROTOBUF_FIELD_OFFSET(GraphProto, _impl_.graph_in_size_)}},
    // optional bytes graph_out_data = 6;
    {::_pbi::TcParser::FastBS1,
     {50, 3, 0, PROTOBUF_FIELD_OFFSET(GraphProto, _impl_.graph_out_data_)}},
    // optional uint32 graph_out_size = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(GraphProto, _impl_.graph_out_size_), 6>(),
     {56, 6, 0, PROTOBUF_FIELD_OFFSET(GraphProto, _impl_.graph_out_size_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string graph_name = 1;
    {PROTOBUF_FIELD_OFFSET(GraphProto, _impl_.graph_name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional bytes graph_data = 2;
    {PROTOBUF_FIELD_OFFSET(GraphProto, _impl_.graph_data_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional uint32 graph_size = 3;
    {PROTOBUF_FIELD_OFFSET(GraphProto, _impl_.graph_size_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional bytes graph_in_data = 4;
    {PROTOBUF_FIELD_OFFSET(GraphProto, _impl_.graph_in_data_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional uint32 graph_in_size = 5;
    {PROTOBUF_FIELD_OFFSET(GraphProto, _impl_.graph_in_size_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
    // optional bytes graph_out_data = 6;
    {PROTOBUF_FIELD_OFFSET(GraphProto, _impl_.graph_out_data_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional uint32 graph_out_size = 7;
    {PROTOBUF_FIELD_OFFSET(GraphProto, _impl_.graph_out_size_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\20\12\0\0\0\0\0\0"
    "graph.GraphProto"
    "graph_name"
  }},
};

PROTOBUF_NOINLINE void GraphProto::Clear() {
// @@protoc_insertion_point(message_clear_start:graph.GraphProto)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.graph_name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.graph_data_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.graph_in_data_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.graph_out_data_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x00000070u) {
    ::memset(&_impl_.graph_size_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.graph_out_size_) -
        reinterpret_cast<char*>(&_impl_.graph_size_)) + sizeof(_impl_.graph_out_size_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GraphProto::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GraphProto& this_ = static_cast<const GraphProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GraphProto::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GraphProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:graph.GraphProto)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional string graph_name = 1;
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_graph_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "graph.GraphProto.graph_name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // optional bytes graph_data = 2;
          if (cached_has_bits & 0x00000002u) {
            const std::string& _s = this_._internal_graph_data();
            target = stream->WriteBytesMaybeAliased(2, _s, target);
          }

          // optional uint32 graph_size = 3;
          if (cached_has_bits & 0x00000010u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                3, this_._internal_graph_size(), target);
          }

          // optional bytes graph_in_data = 4;
          if (cached_has_bits & 0x00000004u) {
            const std::string& _s = this_._internal_graph_in_data();
            target = stream->WriteBytesMaybeAliased(4, _s, target);
          }

          // optional uint32 graph_in_size = 5;
          if (cached_has_bits & 0x00000020u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                5, this_._internal_graph_in_size(), target);
          }

          // optional bytes graph_out_data = 6;
          if (cached_has_bits & 0x00000008u) {
            const std::string& _s = this_._internal_graph_out_data();
            target = stream->WriteBytesMaybeAliased(6, _s, target);
          }

          // optional uint32 graph_out_size = 7;
          if (cached_has_bits & 0x00000040u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                7, this_._internal_graph_out_size(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:graph.GraphProto)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GraphProto::ByteSizeLong(const MessageLite& base) {
          const GraphProto& this_ = static_cast<const GraphProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GraphProto::ByteSizeLong() const {
          const GraphProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:graph.GraphProto)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000007fu) {
            // optional string graph_name = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_graph_name());
            }
            // optional bytes graph_data = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_graph_data());
            }
            // optional bytes graph_in_data = 4;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_graph_in_data());
            }
            // optional bytes graph_out_data = 6;
            if (cached_has_bits & 0x00000008u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_graph_out_data());
            }
            // optional uint32 graph_size = 3;
            if (cached_has_bits & 0x00000010u) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_graph_size());
            }
            // optional uint32 graph_in_size = 5;
            if (cached_has_bits & 0x00000020u) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_graph_in_size());
            }
            // optional uint32 graph_out_size = 7;
            if (cached_has_bits & 0x00000040u) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_graph_out_size());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GraphProto::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GraphProto*>(&to_msg);
  auto& from = static_cast<const GraphProto&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:graph.GraphProto)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_graph_name(from._internal_graph_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_graph_data(from._internal_graph_data());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_graph_in_data(from._internal_graph_in_data());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_set_graph_out_data(from._internal_graph_out_data());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.graph_size_ = from._impl_.graph_size_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.graph_in_size_ = from._impl_.graph_in_size_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.graph_out_size_ = from._impl_.graph_out_size_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GraphProto::CopyFrom(const GraphProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:graph.GraphProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GraphProto::InternalSwap(GraphProto* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.graph_name_, &other->_impl_.graph_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.graph_data_, &other->_impl_.graph_data_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.graph_in_data_, &other->_impl_.graph_in_data_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.graph_out_data_, &other->_impl_.graph_out_data_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GraphProto, _impl_.graph_out_size_)
      + sizeof(GraphProto::_impl_.graph_out_size_)
      - PROTOBUF_FIELD_OFFSET(GraphProto, _impl_.graph_size_)>(
          reinterpret_cast<char*>(&_impl_.graph_size_),
          reinterpret_cast<char*>(&other->_impl_.graph_size_));
}

::google::protobuf::Metadata GraphProto::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GraphsProto::_Internal {
 public:
};

GraphsProto::GraphsProto(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:graph.GraphsProto)
}
inline PROTOBUF_NDEBUG_INLINE GraphsProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::graph::GraphsProto& from_msg)
      : graph_node_{visibility, arena, from.graph_node_},
        _cached_size_{0} {}

GraphsProto::GraphsProto(
    ::google::protobuf::Arena* arena,
    const GraphsProto& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GraphsProto* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:graph.GraphsProto)
}
inline PROTOBUF_NDEBUG_INLINE GraphsProto::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : graph_node_{visibility, arena},
        _cached_size_{0} {}

inline void GraphsProto::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GraphsProto::~GraphsProto() {
  // @@protoc_insertion_point(destructor:graph.GraphsProto)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GraphsProto::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    GraphsProto::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_GraphsProto_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &GraphsProto::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<GraphsProto>(),
            ::google::protobuf::Message::GetNewImpl<GraphsProto>(),
            ::google::protobuf::Message::GetClearImpl<GraphsProto>(), &GraphsProto::ByteSizeLong,
                &GraphsProto::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(GraphsProto, _impl_._cached_size_),
            false,
        },
        &GraphsProto::kDescriptorMethods,
        &descriptor_table_graph_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* GraphsProto::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> GraphsProto::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967293,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::graph::GraphsProto>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .graph.GraphProto graph_node = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(GraphsProto, _impl_.graph_node_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .graph.GraphProto graph_node = 2;
    {PROTOBUF_FIELD_OFFSET(GraphsProto, _impl_.graph_node_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::graph::GraphProto>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GraphsProto::Clear() {
// @@protoc_insertion_point(message_clear_start:graph.GraphsProto)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.graph_node_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GraphsProto::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GraphsProto& this_ = static_cast<const GraphsProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GraphsProto::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GraphsProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:graph.GraphsProto)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .graph.GraphProto graph_node = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_graph_node_size());
               i < n; i++) {
            const auto& repfield = this_._internal_graph_node().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:graph.GraphsProto)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GraphsProto::ByteSizeLong(const MessageLite& base) {
          const GraphsProto& this_ = static_cast<const GraphsProto&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GraphsProto::ByteSizeLong() const {
          const GraphsProto& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:graph.GraphsProto)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .graph.GraphProto graph_node = 2;
             {
              total_size += 1UL * this_._internal_graph_node_size();
              for (const auto& msg : this_._internal_graph_node()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GraphsProto::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GraphsProto*>(&to_msg);
  auto& from = static_cast<const GraphsProto&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:graph.GraphsProto)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_graph_node()->MergeFrom(
      from._internal_graph_node());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GraphsProto::CopyFrom(const GraphsProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:graph.GraphsProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GraphsProto::InternalSwap(GraphsProto* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.graph_node_.InternalSwap(&other->_impl_.graph_node_);
}

::google::protobuf::Metadata GraphsProto::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace graph
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_graph_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
