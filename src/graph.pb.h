// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: graph.proto
// Protobuf C++ Version: 5.29.0-dev

#ifndef GOOGLE_PROTOBUF_INCLUDED_graph_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_graph_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_graph_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_graph_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_graph_2eproto;
namespace graph {
class GraphProto;
struct GraphProtoDefaultTypeInternal;
extern GraphProtoDefaultTypeInternal _GraphProto_default_instance_;
class GraphsProto;
struct GraphsProtoDefaultTypeInternal;
extern GraphsProtoDefaultTypeInternal _GraphsProto_default_instance_;
}  // namespace graph
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace graph {

// ===================================================================


// -------------------------------------------------------------------

class GraphProto final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:graph.GraphProto) */ {
 public:
  inline GraphProto() : GraphProto(nullptr) {}
  ~GraphProto() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GraphProto(
      ::google::protobuf::internal::ConstantInitialized);

  inline GraphProto(const GraphProto& from) : GraphProto(nullptr, from) {}
  inline GraphProto(GraphProto&& from) noexcept
      : GraphProto(nullptr, std::move(from)) {}
  inline GraphProto& operator=(const GraphProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline GraphProto& operator=(GraphProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GraphProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const GraphProto* internal_default_instance() {
    return reinterpret_cast<const GraphProto*>(
        &_GraphProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(GraphProto& a, GraphProto& b) { a.Swap(&b); }
  inline void Swap(GraphProto* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GraphProto* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GraphProto* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<GraphProto>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GraphProto& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GraphProto& from) { GraphProto::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GraphProto* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "graph.GraphProto"; }

 protected:
  explicit GraphProto(::google::protobuf::Arena* arena);
  GraphProto(::google::protobuf::Arena* arena, const GraphProto& from);
  GraphProto(::google::protobuf::Arena* arena, GraphProto&& from) noexcept
      : GraphProto(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kGraphNameFieldNumber = 1,
    kGraphDataFieldNumber = 2,
    kGraphInDataFieldNumber = 4,
    kGraphOutDataFieldNumber = 6,
    kGraphSizeFieldNumber = 3,
    kGraphInSizeFieldNumber = 5,
    kGraphOutSizeFieldNumber = 7,
  };
  // optional string graph_name = 1;
  bool has_graph_name() const;
  void clear_graph_name() ;
  const std::string& graph_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_graph_name(Arg_&& arg, Args_... args);
  std::string* mutable_graph_name();
  PROTOBUF_NODISCARD std::string* release_graph_name();
  void set_allocated_graph_name(std::string* value);

  private:
  const std::string& _internal_graph_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_graph_name(
      const std::string& value);
  std::string* _internal_mutable_graph_name();

  public:
  // optional bytes graph_data = 2;
  bool has_graph_data() const;
  void clear_graph_data() ;
  const std::string& graph_data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_graph_data(Arg_&& arg, Args_... args);
  std::string* mutable_graph_data();
  PROTOBUF_NODISCARD std::string* release_graph_data();
  void set_allocated_graph_data(std::string* value);

  private:
  const std::string& _internal_graph_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_graph_data(
      const std::string& value);
  std::string* _internal_mutable_graph_data();

  public:
  // optional bytes graph_in_data = 4;
  bool has_graph_in_data() const;
  void clear_graph_in_data() ;
  const std::string& graph_in_data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_graph_in_data(Arg_&& arg, Args_... args);
  std::string* mutable_graph_in_data();
  PROTOBUF_NODISCARD std::string* release_graph_in_data();
  void set_allocated_graph_in_data(std::string* value);

  private:
  const std::string& _internal_graph_in_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_graph_in_data(
      const std::string& value);
  std::string* _internal_mutable_graph_in_data();

  public:
  // optional bytes graph_out_data = 6;
  bool has_graph_out_data() const;
  void clear_graph_out_data() ;
  const std::string& graph_out_data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_graph_out_data(Arg_&& arg, Args_... args);
  std::string* mutable_graph_out_data();
  PROTOBUF_NODISCARD std::string* release_graph_out_data();
  void set_allocated_graph_out_data(std::string* value);

  private:
  const std::string& _internal_graph_out_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_graph_out_data(
      const std::string& value);
  std::string* _internal_mutable_graph_out_data();

  public:
  // optional uint32 graph_size = 3;
  bool has_graph_size() const;
  void clear_graph_size() ;
  ::uint32_t graph_size() const;
  void set_graph_size(::uint32_t value);

  private:
  ::uint32_t _internal_graph_size() const;
  void _internal_set_graph_size(::uint32_t value);

  public:
  // optional uint32 graph_in_size = 5;
  bool has_graph_in_size() const;
  void clear_graph_in_size() ;
  ::uint32_t graph_in_size() const;
  void set_graph_in_size(::uint32_t value);

  private:
  ::uint32_t _internal_graph_in_size() const;
  void _internal_set_graph_in_size(::uint32_t value);

  public:
  // optional uint32 graph_out_size = 7;
  bool has_graph_out_size() const;
  void clear_graph_out_size() ;
  ::uint32_t graph_out_size() const;
  void set_graph_out_size(::uint32_t value);

  private:
  ::uint32_t _internal_graph_out_size() const;
  void _internal_set_graph_out_size(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:graph.GraphProto)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 0,
      35, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GraphProto_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GraphProto& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr graph_name_;
    ::google::protobuf::internal::ArenaStringPtr graph_data_;
    ::google::protobuf::internal::ArenaStringPtr graph_in_data_;
    ::google::protobuf::internal::ArenaStringPtr graph_out_data_;
    ::uint32_t graph_size_;
    ::uint32_t graph_in_size_;
    ::uint32_t graph_out_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_graph_2eproto;
};
// -------------------------------------------------------------------

class GraphsProto final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:graph.GraphsProto) */ {
 public:
  inline GraphsProto() : GraphsProto(nullptr) {}
  ~GraphsProto() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GraphsProto(
      ::google::protobuf::internal::ConstantInitialized);

  inline GraphsProto(const GraphsProto& from) : GraphsProto(nullptr, from) {}
  inline GraphsProto(GraphsProto&& from) noexcept
      : GraphsProto(nullptr, std::move(from)) {}
  inline GraphsProto& operator=(const GraphsProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline GraphsProto& operator=(GraphsProto&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GraphsProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const GraphsProto* internal_default_instance() {
    return reinterpret_cast<const GraphsProto*>(
        &_GraphsProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(GraphsProto& a, GraphsProto& b) { a.Swap(&b); }
  inline void Swap(GraphsProto* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GraphsProto* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GraphsProto* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<GraphsProto>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GraphsProto& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GraphsProto& from) { GraphsProto::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GraphsProto* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "graph.GraphsProto"; }

 protected:
  explicit GraphsProto(::google::protobuf::Arena* arena);
  GraphsProto(::google::protobuf::Arena* arena, const GraphsProto& from);
  GraphsProto(::google::protobuf::Arena* arena, GraphsProto&& from) noexcept
      : GraphsProto(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kGraphNodeFieldNumber = 2,
  };
  // repeated .graph.GraphProto graph_node = 2;
  int graph_node_size() const;
  private:
  int _internal_graph_node_size() const;

  public:
  void clear_graph_node() ;
  ::graph::GraphProto* mutable_graph_node(int index);
  ::google::protobuf::RepeatedPtrField<::graph::GraphProto>* mutable_graph_node();

  private:
  const ::google::protobuf::RepeatedPtrField<::graph::GraphProto>& _internal_graph_node() const;
  ::google::protobuf::RepeatedPtrField<::graph::GraphProto>* _internal_mutable_graph_node();
  public:
  const ::graph::GraphProto& graph_node(int index) const;
  ::graph::GraphProto* add_graph_node();
  const ::google::protobuf::RepeatedPtrField<::graph::GraphProto>& graph_node() const;
  // @@protoc_insertion_point(class_scope:graph.GraphsProto)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GraphsProto_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GraphsProto& from_msg);
    ::google::protobuf::RepeatedPtrField< ::graph::GraphProto > graph_node_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_graph_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// GraphProto

// optional string graph_name = 1;
inline bool GraphProto::has_graph_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void GraphProto::clear_graph_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.graph_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& GraphProto::graph_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:graph.GraphProto.graph_name)
  return _internal_graph_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GraphProto::set_graph_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.graph_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:graph.GraphProto.graph_name)
}
inline std::string* GraphProto::mutable_graph_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_graph_name();
  // @@protoc_insertion_point(field_mutable:graph.GraphProto.graph_name)
  return _s;
}
inline const std::string& GraphProto::_internal_graph_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.graph_name_.Get();
}
inline void GraphProto::_internal_set_graph_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.graph_name_.Set(value, GetArena());
}
inline std::string* GraphProto::_internal_mutable_graph_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.graph_name_.Mutable( GetArena());
}
inline std::string* GraphProto::release_graph_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:graph.GraphProto.graph_name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.graph_name_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.graph_name_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void GraphProto::set_allocated_graph_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.graph_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.graph_name_.IsDefault()) {
          _impl_.graph_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:graph.GraphProto.graph_name)
}

// optional bytes graph_data = 2;
inline bool GraphProto::has_graph_data() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void GraphProto::clear_graph_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.graph_data_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& GraphProto::graph_data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:graph.GraphProto.graph_data)
  return _internal_graph_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GraphProto::set_graph_data(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.graph_data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:graph.GraphProto.graph_data)
}
inline std::string* GraphProto::mutable_graph_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_graph_data();
  // @@protoc_insertion_point(field_mutable:graph.GraphProto.graph_data)
  return _s;
}
inline const std::string& GraphProto::_internal_graph_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.graph_data_.Get();
}
inline void GraphProto::_internal_set_graph_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.graph_data_.Set(value, GetArena());
}
inline std::string* GraphProto::_internal_mutable_graph_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.graph_data_.Mutable( GetArena());
}
inline std::string* GraphProto::release_graph_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:graph.GraphProto.graph_data)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.graph_data_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.graph_data_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void GraphProto::set_allocated_graph_data(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.graph_data_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.graph_data_.IsDefault()) {
          _impl_.graph_data_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:graph.GraphProto.graph_data)
}

// optional uint32 graph_size = 3;
inline bool GraphProto::has_graph_size() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void GraphProto::clear_graph_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.graph_size_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::uint32_t GraphProto::graph_size() const {
  // @@protoc_insertion_point(field_get:graph.GraphProto.graph_size)
  return _internal_graph_size();
}
inline void GraphProto::set_graph_size(::uint32_t value) {
  _internal_set_graph_size(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:graph.GraphProto.graph_size)
}
inline ::uint32_t GraphProto::_internal_graph_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.graph_size_;
}
inline void GraphProto::_internal_set_graph_size(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.graph_size_ = value;
}

// optional bytes graph_in_data = 4;
inline bool GraphProto::has_graph_in_data() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void GraphProto::clear_graph_in_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.graph_in_data_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& GraphProto::graph_in_data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:graph.GraphProto.graph_in_data)
  return _internal_graph_in_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GraphProto::set_graph_in_data(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.graph_in_data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:graph.GraphProto.graph_in_data)
}
inline std::string* GraphProto::mutable_graph_in_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_graph_in_data();
  // @@protoc_insertion_point(field_mutable:graph.GraphProto.graph_in_data)
  return _s;
}
inline const std::string& GraphProto::_internal_graph_in_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.graph_in_data_.Get();
}
inline void GraphProto::_internal_set_graph_in_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.graph_in_data_.Set(value, GetArena());
}
inline std::string* GraphProto::_internal_mutable_graph_in_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.graph_in_data_.Mutable( GetArena());
}
inline std::string* GraphProto::release_graph_in_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:graph.GraphProto.graph_in_data)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.graph_in_data_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.graph_in_data_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void GraphProto::set_allocated_graph_in_data(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.graph_in_data_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.graph_in_data_.IsDefault()) {
          _impl_.graph_in_data_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:graph.GraphProto.graph_in_data)
}

// optional uint32 graph_in_size = 5;
inline bool GraphProto::has_graph_in_size() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void GraphProto::clear_graph_in_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.graph_in_size_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::uint32_t GraphProto::graph_in_size() const {
  // @@protoc_insertion_point(field_get:graph.GraphProto.graph_in_size)
  return _internal_graph_in_size();
}
inline void GraphProto::set_graph_in_size(::uint32_t value) {
  _internal_set_graph_in_size(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:graph.GraphProto.graph_in_size)
}
inline ::uint32_t GraphProto::_internal_graph_in_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.graph_in_size_;
}
inline void GraphProto::_internal_set_graph_in_size(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.graph_in_size_ = value;
}

// optional bytes graph_out_data = 6;
inline bool GraphProto::has_graph_out_data() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void GraphProto::clear_graph_out_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.graph_out_data_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const std::string& GraphProto::graph_out_data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:graph.GraphProto.graph_out_data)
  return _internal_graph_out_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GraphProto::set_graph_out_data(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.graph_out_data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:graph.GraphProto.graph_out_data)
}
inline std::string* GraphProto::mutable_graph_out_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_graph_out_data();
  // @@protoc_insertion_point(field_mutable:graph.GraphProto.graph_out_data)
  return _s;
}
inline const std::string& GraphProto::_internal_graph_out_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.graph_out_data_.Get();
}
inline void GraphProto::_internal_set_graph_out_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.graph_out_data_.Set(value, GetArena());
}
inline std::string* GraphProto::_internal_mutable_graph_out_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  return _impl_.graph_out_data_.Mutable( GetArena());
}
inline std::string* GraphProto::release_graph_out_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:graph.GraphProto.graph_out_data)
  if ((_impl_._has_bits_[0] & 0x00000008u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000008u;
  auto* released = _impl_.graph_out_data_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.graph_out_data_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void GraphProto::set_allocated_graph_out_data(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.graph_out_data_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.graph_out_data_.IsDefault()) {
          _impl_.graph_out_data_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:graph.GraphProto.graph_out_data)
}

// optional uint32 graph_out_size = 7;
inline bool GraphProto::has_graph_out_size() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void GraphProto::clear_graph_out_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.graph_out_size_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::uint32_t GraphProto::graph_out_size() const {
  // @@protoc_insertion_point(field_get:graph.GraphProto.graph_out_size)
  return _internal_graph_out_size();
}
inline void GraphProto::set_graph_out_size(::uint32_t value) {
  _internal_set_graph_out_size(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:graph.GraphProto.graph_out_size)
}
inline ::uint32_t GraphProto::_internal_graph_out_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.graph_out_size_;
}
inline void GraphProto::_internal_set_graph_out_size(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.graph_out_size_ = value;
}

// -------------------------------------------------------------------

// GraphsProto

// repeated .graph.GraphProto graph_node = 2;
inline int GraphsProto::_internal_graph_node_size() const {
  return _internal_graph_node().size();
}
inline int GraphsProto::graph_node_size() const {
  return _internal_graph_node_size();
}
inline void GraphsProto::clear_graph_node() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.graph_node_.Clear();
}
inline ::graph::GraphProto* GraphsProto::mutable_graph_node(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:graph.GraphsProto.graph_node)
  return _internal_mutable_graph_node()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::graph::GraphProto>* GraphsProto::mutable_graph_node()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:graph.GraphsProto.graph_node)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_graph_node();
}
inline const ::graph::GraphProto& GraphsProto::graph_node(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:graph.GraphsProto.graph_node)
  return _internal_graph_node().Get(index);
}
inline ::graph::GraphProto* GraphsProto::add_graph_node() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::graph::GraphProto* _add = _internal_mutable_graph_node()->Add();
  // @@protoc_insertion_point(field_add:graph.GraphsProto.graph_node)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::graph::GraphProto>& GraphsProto::graph_node() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:graph.GraphsProto.graph_node)
  return _internal_graph_node();
}
inline const ::google::protobuf::RepeatedPtrField<::graph::GraphProto>&
GraphsProto::_internal_graph_node() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.graph_node_;
}
inline ::google::protobuf::RepeatedPtrField<::graph::GraphProto>*
GraphsProto::_internal_mutable_graph_node() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.graph_node_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace graph


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_graph_2eproto_2epb_2eh
